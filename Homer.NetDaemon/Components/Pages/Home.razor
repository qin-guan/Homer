@page "/"
@using System.Reactive.Linq
@using System.Text.Json
@using global::NetDaemon.HassModel
@using global::NetDaemon.HassModel.Entities
@using Homer.NetDaemon.Entities
@using Homer.NetDaemon.Options
@using Microsoft.Extensions.Options
@rendermode InteractiveServer

@code {
  [Inject] public IHaContext HaContext { get; set; } = null!;
  [Inject] public Entities Entities { get; set; } = null!;
  [Inject] public IOptions<GoogleHomeDashboardOptions> GoogleHomeDashboardOptions { get; set; } = null!;
  [SupplyParameterFromQuery] private string Secret { get; set; }

  private DateTime? HeaterOldOnDateTime { get; set; }
  private DateTime? HeaterOldOffDateTime { get; set; }

  protected override void OnInitialized()
  {
    HaContext.StateAllChanges().SubscribeAsync(_ => InvokeAsync(StateHasChanged));
    Entities.Switch.WaterHeaterSwitch.StateChanges()
      .Where(e => e.New.IsOff())
      .Subscribe((e) =>
      {
        HeaterOldOnDateTime = e.New.LastChanged;
        HeaterOldOffDateTime = DateTime.Now;
      });
  }

  protected Action<bool> Click(SwitchEntity entity)
  {
    return (bool value) =>
    {
      if (value)
      {
        entity.TurnOn();
      }
      else
      {
        entity.TurnOff();
      }
    };
  }

}

<PageTitle>Home</PageTitle>

@if (GoogleHomeDashboardOptions.Value.Secret != Secret)
{
  <span class="p-2">Nothing here!</span>
}
else
{
  @* Container *@
  <Stack IsRow="true" style="height: 100vh" class="p-2 gap-1">
    @* Left half *@
    <StackItem IsFill="true">
      <Stack class="gap-3">
        <StackItem>
          <Stack IsRow="true" Justify="StackJustifyContent.Between" AlignItems="StackAlignItems.Center">
            <StackItem>
              <span>阳台灯</span>
            </StackItem>
            <StackItem>
              <Toggle
                Value="Entities.Switch.BalconyLights.IsOn()"
                ValueChanged="Click(Entities.Switch.BalconyLights)"
                OnText="开"
                OffText="关"
                Color="Color.Warning"/>
            </StackItem>
          </Stack>
        </StackItem>
        <StackItem>
          <Stack IsRow="true" Justify="StackJustifyContent.Between" AlignItems="StackAlignItems.Center">
            <StackItem>
              <span>热水器</span>
            </StackItem>
            <StackItem>

              <Toggle
                Value="Entities.Switch.WaterHeaterSwitch.IsOn()"
                ValueChanged="Click(Entities.Switch.WaterHeaterSwitch)"
                OnText="开"
                OffText="关"
                Color="Color.Warning"
              />
            </StackItem>
          </Stack>
        </StackItem>
        <StackItem>
          @if (Entities.Switch.WaterHeaterSwitch.IsOff() && HeaterOldOffDateTime is not null && HeaterOldOnDateTime is not null)
          {
            <Card Color="Color.Danger">
              <BodyTemplate>
                上次使用 @HeaterOldOffDateTime.Value.ToShortTimeString()
                <br/>
                总 @((HeaterOldOffDateTime - HeaterOldOnDateTime).Value.TotalMinutes.ToString("F1")) 分
              </BodyTemplate>
            </Card>
          }
        </StackItem>
      </Stack>
    </StackItem>

    <StackItem>
      <Divider IsVertical="true"></Divider>
    </StackItem>

    @* Right half *@
    <StackItem IsFill="true">
      <Stack class="gap-3">
        <StackItem>
          <Stack IsRow="true" Justify="StackJustifyContent.Between" AlignItems="StackAlignItems.Center">
            <StackItem>
              <span>空调 1</span>
            </StackItem>
            <StackItem>
              <Toggle
                Value="Entities.Switch.Daikinap59921None.IsOn()"
                ValueChanged="Click(Entities.Switch.Daikinap59921None)"
                OnText="开"
                OffText="关"
                Color="Color.Warning"/>
            </StackItem>
          </Stack>
        </StackItem>
        <StackItem>
          <Stack IsRow="true" Justify="StackJustifyContent.Between" AlignItems="StackAlignItems.Center">
            <StackItem>
              <span>空调 2</span>
            </StackItem>
            <StackItem>
              <Toggle
                Value="Entities.Switch.Daikinap16703None.IsOn()"
                ValueChanged="Click(Entities.Switch.Daikinap16703None)"
                OnText="开"
                OffText="关"
                Color="Color.Warning"
              />
            </StackItem>
          </Stack>
        </StackItem>
      </Stack>
    </StackItem>
  </Stack>
}

